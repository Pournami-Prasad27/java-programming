[01/04, 3:33 pm] AhanimaðŸ˜‰: import java.util.Scanner;

public class CalculateTotalMarks {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Prompt the user to enter the number of subjects
        System.out.print("Enter the number of subjects: ");
        int numSubjects = input.nextInt();

        // Create an array to hold the marks
        int[] marks = new int[numSubjects];

        // Accept the marks from the keyboard and store them in the array
        for (int i = 0; i < numSubjects; i++) {
            System.out.print("Enter the mark for subject " + (i+1) + ": ");
            marks[i] = input.nextInt();
        }

        // Calculate the total marks
        int totalMarks = 0;
        for (int i = 0; i < numSubjects; i++) {
            totalMarks += marks[i];
        }

        // Display the total marks obtained by the student
        System.out.println("Total marks obtained: " + totalMarks);
    }
}
[01/04, 3:34 pm] AhanimaðŸ˜‰: import java.util.Arrays;
import java.util.Scanner;

public class SortStringArrayFromConsole {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        // Prompt the user to enter the number of strings
        System.out.print("Enter the number of strings: ");
        int numStrings = input.nextInt();

        // Create an array to hold the strings
        String[] arr = new String[numStrings];

        // Accept the strings from the console and store them in the array
        for (int i = 0; i < numStrings; i++) {
            System.out.print("Enter string #" + (i+1) + ": ");
            arr[i] = input.next();
        }

        // Sort the array using Arrays.sort() method
        Arrays.sort(arr);

        // Print the sorted array
        System.out.println("Sorted strings:");
        for (String s : arr) {
            System.out.println(s);
        }
    }
}
[01/04, 3:36 pm] AhanimaðŸ˜‰: import java.util.Arrays;
import java.util.Scanner;

public class SortStringCharacters {
    public static void main(String[] args) {
        // Read a string from the console
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string: ");
        String inputString = scanner.nextLine();

        // Convert the string to a character array
        char[] charArray = inputString.toCharArray();

        // Sort the character array
        Arrays.sort(charArray);

        // Convert the character array back to a string and print it
        String sortedString = new String(charArray);
        System.out.println("Sorted string: " + sortedString);
    }
}
[01/04, 3:38 pm] AhanimaðŸ˜‰: import java.util.Scanner;

public class ArraySearchExample {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the size of the array: ");
        int size = scanner.nextInt();
        int[] array = new int[size];

        System.out.println("Enter the elements of the array: ");
        for (int i = 0; i < size; i++) {
            array[i] = scanner.nextInt();
        }

        System.out.print("Enter the element to search for: ");
        int target = scanner.nextInt();
        boolean found = false;

        for (int i = 0; i < size; i++) {
            if (array[i] == target) {
                found = true;
                System.out.println("Element found at index " + i);
                break;
            }
        }

        if (!found) {
            System.out.println("Element not found in the array");
        }

        scanner.close();
    }
}
[01/04, 3:39 pm] AhanimaðŸ˜‰: import java.util.Scanner;

public class StringManipulationExample {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read input string from console
        System.out.print("Enter a string: ");
        String input = scanner.nextLine();

        // Convert the string to uppercase using String class method
        String uppercase = input.toUpperCase();
        System.out.println("Uppercase string: " + uppercase);

        // Reverse the string using StringBuffer class method
        StringBuffer buffer = new StringBuffer(input);
        String reversed = buffer.reverse().toString();
        System.out.println("Reversed string: " + reversed);

        // Count the number of occurrences of a character using String class method
        System.out.print("Enter a character to count: ");
        char targetChar = scanner.next().charAt(0);
        int count = 0;
        for (int i = 0; i < input.length(); i++) {
            if (input.charAt(i) == targetChar) {
                count++;
            }
        }
        System.out.println("Number of occurrences of " + targetChar + ": " + count);

        scanner.close();
    }
}
[01/04, 3:42 pm] AhanimaðŸ˜‰: import java.util.Scanner;

public class Employee {
    private int enum;
    private String ename;
    private double salary;

    public Employee(int enum, String ename, double salary) {
        this.enum = enum;
        this.ename = ename;
        this.salary = salary;
    }

    public int getEnum() {
        return enum;
    }

    public String getEname() {
        return ename;
    }

    public double getSalary() {
        return salary;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read number of employees from console
        System.out.print("Enter the number of employees: ");
        int n = scanner.nextInt();

        // Read employee information from console
        Employee[] employees = new Employee[n];
        for (int i = 0; i < n; i++) {
            System.out.println("Enter information for employee " + (i + 1) + ":");
            System.out.print("Enter the employee number: ");
            int enum = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character
            System.out.print("Enter the employee name: ");
            String ename = scanner.nextLine();
            System.out.print("Enter the employee salary: ");
            double salary = scanner.nextDouble();
            employees[i] = new Employee(enum, ename, salary);
        }

        // Search for an employee by employee number
        System.out.print("Enter the employee number to search for: ");
        int targetEnum = scanner.nextInt();
        boolean found = false;
        for (Employee employee : employees) {
            if (employee.getEnum() == targetEnum) {
                System.out.println("Employee found: " + employee.getEname() + ", " + employee.getSalary());
                found = true;
                break;
            }
        }
        if (!found) {
            System.out.println("Employee not found");
        }

        scanner.close();
    }
}
